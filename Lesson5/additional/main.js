//- Дано натуральное число n. Выведите все числа от 1 до n.

// let showOneToN = n => {
//     for (let i = 1; i < n + 1; ++i) {
//         document.write(i, `<br>`)
//     }
// }
// showOneToN(23)

//______________________________________________________________________________________________________________________________________
// - Даны два целых числа A и В . Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.

// let moveTopMoveBot = (a, b) => {
//     if (a < b) {
//         for (let i = a; i < b + 1; i++) {
//             document.write(i, `<br>`)
//         }
//     } else if (a > b) {
//         for (let i = a; i > b - 1; i--) {
//             document.write(i, `<br>`)
//         }
//     }
// }
// moveTopMoveBot(13, 8)
// moveTopMoveBot(1, 8)

//______________________________________________________________________________________________________________________________________
// -   функція Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//   EXAMPLE:
//   foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//   foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//   foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]

// let foo = (array, elem) => {
//     if ((elem > -1) && (elem < 3)) {
//         let x = array[elem]
//         let y = array[elem + 1]
//         array[elem] = y
//         array[elem + 1] = x
//         return array
//     }else return ('Wrong index')
// }
// document.write(foo([9, 8, 0, 4], 1))

//______________________________________________________________________________________________________________________________________
// - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// EXAMPLE:
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]

// let arr9 = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 88, 0]
//
// let foo = (array) => {
//     //обмежуємо кількість перевірок
//     for (let k = array.length; k > 0; k--) {
//         //перебираємо масив
//         for (let i = 0; i < array.length; i++) {
//             //шукаємо нуль
//             if (array[i] === 0) {
//                 //зміщуємо решту масиву
//                 for (let j = i; j < array.length; j++) {
//                     array[j] = array[j + 1]
//                 }
//                 //повертаємо нуль в кінець масиву
//                 array[array.length - 1] = 0
//             }
//         }
//     }
//     //повертаємо масив
//     return array
// }
//
// document.write(foo(arr9))


//з'явилась ідея застосувати рекурсію до цього завдання:

// let arr9 = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 88, 0]
//
// let foo = (array, s) => {
//
//     //перебираємо масив
//     for (let i = 0; i < array.length; i++) {
//         //шукаємо нуль
//         if (array[i] === 0) {
//             //зміщуємо решту масиву
//             for (let j = i; j < array.length; j++) {
//                 array[j] = array[j + 1]
//             }
//             //повертаємо нуль в кінець масиву
//             array[array.length - 1] = 0
//             //продовжуємо перевіряти масив
//             if (s !== 0) {
//                 s--
//                 foo(array, s)
//             }
//         }
//     }
//     //повертаємо масив
//     return array
// }
//
// let s = arr9.length
// document.write(foo(arr9, s))
// // але при більшій кількості нулів починає страшно довго думати браузер  :)))